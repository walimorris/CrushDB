# CrushDB Configuration File
# This file stores database settings such as page size, WAL settings, and storage paths.
# Modify these settings to customize CrushDB's behavior.
# ------------------------------
# Log Rotation Process:
# ------------------------------
# CrushDB enforces log rotation using the following strategy:
#   - Logs are stored in the dedicated `/log/` directory.
#   - Each log entry follows a structured format: [YYYY-MM-DD HH:mm:ss] [LEVEL] message
#   - Logs older than `log_retention_days` (e.g., 7 days) are automatically deleted.
#   - If the total log directory size exceeds `log_max_size_mb`, the oldest logs are removed.
#   - Log files are rotated by renaming:
#         crushdb.log → crushdb.log.1 → crushdb.log.2 → crushdb.log.3
#         When a new log file is created, the oldest log (e.g., `crushdb.log.5`) is deleted.
#
# Example log retention cycle:
#   /log/crushdb.log       (current log file)
#   /log/crushdb.log.1     (previous log)
#   /log/crushdb.log.2     (older log)
#   /log/crushdb.log.3     (older log)
#   /log/crushdb.log.4     (older log)
#
# After exceeding `log_retention_days` or `log_max_size_mb`:
#   /log/crushdb.log       (new empty log file)
#   /log/crushdb.log.1     (was crushdb.log)
#   /log/crushdb.log.2     (was crushdb.log.1)
#   /log/crushdb.log.3     (was crushdb.log.2)
#   /log/crushdb.log.4     (was crushdb.log.3)
#   /log/crushdb.log.5     (was crushdb.log.4) → Deleted
#
# Modify `log_retention_days` or `log_max_size_mb` to change log rotation settings.

# ------------------------------
# Storage Settings
# ------------------------------
# Defines the base directory for CrushDB storage.
# This directory contains all database-related files, including data, logs, and configurations.
storage_path=~/.crushdb/data/

# ------------------------------
# Page Settings
# ------------------------------
# The maximum size of a single page in CrushDB, defined in bytes.
# Default is set to 4KB (0x1000).
page_size=4096

# Configuration option that determines whether documents should be automatically compressed
# when inserted into the page.
# Enabling this feature may improve space efficiency but could increase CPU usage.
#
# Default state is `false` (no auto compression)
autoCompressOnInsert=false

# ------------------------------
# Write-Ahead Logging (WAL)
# ------------------------------
# Flag indicating whether Write-Ahead Logging (WAL) is enabled.
# If set to true, transactions are logged before being committed to disk.
# This enhances durability and crash recovery.
wal_enabled=true

# ------------------------------
# Tombstone Garbage Collection
# ------------------------------
# Tombstone grace period (in milliseconds) before deleted data is permanently removed.
# This prevents immediate deletion to allow for recovery or conflict resolution.
# Default is set to 60 seconds (60000 ms).
tombstone_gc=60000

# ------------------------------
# Logging Settings
# ------------------------------
# Directory where general application logs (errors, debug, performance metrics) are stored.
# This is separate from WAL logs to maintain clarity between operational and transactional logs.
log_directory=~/.crushdb/log/

# The number of log files stored until system deletes old logs. This also depends on the log size.
# Depending on log size configuration, individual log files are variable.
log_max_files=10

# The number of days logs are retained before deletion.
# CrushDB handles log rotation by periodically checking log files and enforcing a retention policy.
# This process ensures that logs do not grow indefinitely, keeping the embedded database lightweight.
log_retention_days=7

# The maximum log size (in MB) before the system deletes old logs.
# When the total log size in the `/log/` directory exceeds this limit,
# the oldest log files are deleted to make space for new entries.
log_max_size_mb=50

# Supported log levels for CrushDB.
# CrushDB allows logging at different levels of severity:
#   INFO  - General informational messages about database operations.
#   ERROR - Critical errors or failures that require attention.
log_level=INFO,ERROR

# ------------------------------
# Security Settings
# ------------------------------
# Flag to enable or disable TLS (Transport Layer Security) for secure communication.
# When set to true, CrushDB will enforce encrypted connections using TLS.
tls_enabled=false

# Default system CA (Certificate Authority) certificate path used for TLS verification.
# This is the standard location on Debian/Ubuntu-based Linux systems where trusted CA
# certificates are stored for validating SSL/TLS connections.
# Example:
#   Debian/Ubuntu: /etc/ssl/certs/ca-certificates.crt
#   RHEL/CentOS: /etc/pki/tls/certs/ca-bundle.crt
#   Alpine Linux: /etc/ssl/cert.pem
# If CrushDB is running on a different Linux distribution, this path should be updated accordingly.
ca_cert_path=/etc/ssl/certs/ca-certificates.crt

# Path to the directory where CrushDB stores custom user-supplied certificates.
# This directory allows users to override the default system CA certificate if needed.
# If a custom CA certificate is placed in this directory, CrushDB will use it for TLS verification instead.
custom_ca_cert_path=~/.crushdb/certs/

# ------------------------------
# Write-Ahead Log (WAL) Settings
# ------------------------------
# Directory where Write-Ahead Log (WAL) files are stored.
# WAL files ensure durability and recovery in case of a crash.
wal_directory=~/.crushdb/wal/